name: Test Android

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: Package name
        type: choice
        options:
          - odrcore
          - pdf2htmlex
          - fontforge
          - poppler
          - poppler-data
          - cairo
          - openlibm
          - fontconfig
          - glib
          - tmpfile
          - libgsf
          - wvware
      package_version:
        description: Package version. Specify 'newest' or leave empty to request the newest version. Specify 'all' to request all versions.
        required: false

run-name: test ${{ inputs.package_name }}

env:
  # renovate: datasource=python-version depName=python
  PYTHON_VERSION: 3.13

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  generate-matrices:
    runs-on: ubuntu-24.04
    outputs:
      packages: ${{ steps.list-packages-without-dependents.outputs.packages_0 }}
      emulator: ${{ steps.generate-emulator-matrix.outputs.matrix }}
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: setup python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: install python dependencies
        run: python -m pip install -r requirements.txt

      - name: Get requested packages from commits and workflow_dispatch inputs
        id: list-packages-without-dependents
        run: python scripts/list_package_versions.py
        env:
          GITHUB_EVENT: ${{ toJson(github.event) }}

      - name: Generate matrix of emulator images
        id: generate-emulator-matrix
        run: python scripts/emulator_matrix_generator.py

  emulator:
    if: ${{ needs.generate-matrices.outputs.packages != '[]' && needs.generate-matrices.outputs.packages != '' && needs.generate-matrices.outputs.emulator != '[]' }}
    name: ${{ matrix.emulator.arch }}/${{ matrix.emulator.emulator_api_level }}/${{matrix.emulator.build_api_level}} ${{ matrix.package.package_reference }} 
    needs:
      - generate-matrices
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.generate-matrices.outputs.packages) }}
        emulator: ${{ fromJson(needs.generate-matrices.outputs.emulator) }}
    runs-on: ubuntu-24.04
    env:
      ndk_version: 28.1.13356709
      conan_host_profile: android-${{ matrix.emulator.build_api_level }}-${{ matrix.emulator.arch }}
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: setup python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: install python dependencies and setuptools (required to build GLib)
        run: python -m pip install -r requirements.txt

      - name: install NDK
        run: yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --install "ndk;${{ env.ndk_version }}"

      - name: conan remote
        run: conan remote add odr https://artifactory.opendocument.app/artifactory/api/conan/conan

      - name: conan config
        run: conan config install .github/config/ubuntu-24.04/conan

      - name: conan install
        run: conan install ${{ matrix.package.conanfile }} --version ${{ matrix.package.version }} --build missing --profile:host ${{ env.conan_host_profile }} --profile:build ubuntu

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2
        with:
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          api-level: ${{ matrix.emulator.emulator_api_level }}
          arch: ${{ matrix.emulator.arch }}
          target: ${{ matrix.emulator.api_type_target }}
          script: conan test ${{ matrix.package.test_conanfile }} ${{ matrix.package.package_reference }} --profile:host ${{ env.conan_host_profile }} --profile:build ubuntu
